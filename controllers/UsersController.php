<?php
/**
 *
 * @package    Material Dashboard Yii2
 * @author     CodersEden <hello@coderseden.com>
 * @link       https://www.coderseden.com
 * @copyright  2020 Material Dashboard Yii2 (https://www.coderseden.com)
 * @license    MIT - https://www.coderseden.com
 * @since      1.0
 */
namespace app\controllers;

use Yii;
use app\models\User;
use app\models\UserSearch;
use app\models\UserForm;
use app\models\Audit;
use app\components\AccessRule;
use yii\helpers\ArrayHelper;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * Class UsersController
 * @package app\controllers
 */
class UsersController extends \yii\web\Controller
{
    public $layout = 'business';
	/**
	 * @param \yii\base\Action $action
	 *
	 * @return bool|void
	 * @throws \yii\web\BadRequestHttpException
	 */
	public function beforeAction( $action )
	{
		if ( \Yii::$app->getUser()->isGuest ) {
			return \Yii::$app->getResponse()->redirect( \yii\helpers\Url::to(['/']) )->send();
		}
		return parent::beforeAction( $action ); // TODO: Change the autogenerated stub
	}

	/**
	 * @return array
	 */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => \yii\filters\AccessControl::className(),
                // We will override the default rule config with the new AccessRule class
                'ruleConfig' => [
                    'class' => AccessRule::className(),
                ],
                'only' => ['index','create', 'update', 'delete'],
                'rules' => [
        
                    [
                        'allow' => true,
                        'actions' => ['index','create', 'update', 'delete'],
                        // admins to create
                        'roles' => [
                               User::ROLE_ADMIN
                        ],
                    ],
                ],
                'denyCallback' => function($rule, $action) {
                    //redirection here
                    return Yii::$app->getResponse()->redirect(['/site/admin']);
               }
            ],
        ];
    }

	/**
	 * @param array $params
	 *
	 * @return $this
	 */
	public function setViewParams(array $params = [])
	{
		$this->view->params = ArrayHelper::merge($this->view->params, $params);
		return $this;
	}

	/**
	 * @return string
	 */
    public function actionIndex()
    {
        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(\Yii::$app->getRequest()->queryParams);
        $dataProvider->pagination->pageSize=10;

	    \Yii::$app->view->title = \Yii::t('app', 'Users');

        return $this->render('list', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

	/**
	 * @param $id
	 *
	 * @return string
	 * @throws NotFoundHttpException
	 */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    public function actionAdmin()
    {
        return $this->render('admin/index', [
            // 'model' => $this->findModel($id),
        ]);
    }

	/**
	 * @return string|\yii\web\Response
	 */
    public function actionCreate()
    {
        $model = new User([
            'scenario' => User::SCENARIO_CREATE
        ]);

        \Yii::$app->view->title = \Yii::t('app', 'Create User');

        if ($model->load(\Yii::$app->getRequest()->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        } else {
            return $this->render('form', [
                'action'=> 'create',
                'model' => $model,
            ]);
        }
    }

	/**
	 * @param $id
	 *
	 * @return string|\yii\web\Response
	 * @throws NotFoundHttpException
	 */
   

    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $user = \Yii::$app->getRequest()->post('User');
        $message = 'User Updated';

        if ($model->load(\Yii::$app->getRequest()->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        } else {

            return $this->render('form', [
                'action'=> 'update',
                'model' => $model,
            ]);
        }
        // audit trail
        Audit::trail('User', 'Update', $model->id, $message);

        Yii::$app->getSession()->setFlash('success', Yii::t('app', $message));

        return $this->redirect(['update', 'id' => $id]);
    }

	/**
	 * @param $id
	 *
	 * @return \yii\web\Response
	 * @throws NotFoundHttpException
	 * @throws \Throwable
	 * @throws \yii\db\StaleObjectException
	 */
    public function actionDelete($id)
    {
        $model = $this->findModel($id);

        if ($id == 1) {
            return $this->redirect(['/users']);
        }

        $model->delete();

        return $this->redirect(['/users']);
    }

	/**
	 * @param $id
	 *
	 * @return User|null
	 * @throws NotFoundHttpException
	 */
    protected function findModel($id)
    {
        if (($model = User::findOne($id)) !== null) {
            return $model;
        }
        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
